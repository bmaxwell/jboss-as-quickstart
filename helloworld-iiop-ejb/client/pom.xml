<?xml version="1.0"?>
<!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. 
    and/or its affiliates, and individual contributors by the @authors tag. See 
    the copyright.txt in the distribution for a full listing of individual contributors. 
    Licensed under the Apache License, Version 2.0 (the "License"); you may not 
    use this file except in compliance with the License. You may obtain a copy 
    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
    by applicable law or agreed to in writing, software distributed under the 
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
    OF ANY KIND, either express or implied. See the License for the specific 
    language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

		<!-- brad- This section is required -->
    <artifactId>jboss-as-helloworld-iiop-ejb-client</artifactId>

    <parent>
        <groupId>org.jboss.as.quickstarts</groupId>
        <artifactId>jboss-as-helloworld-iiop-ejb</artifactId>
        <version>7.1.2-SNAPSHOT</version>
    </parent>

    <name>JBoss AS Quickstarts: IIOP EJB client</name>

		<!-- ************ -->

    <packaging>jar</packaging>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <dependencies>
				<!-- brad - this is a client declaring dependency on the ejb's client module, might change this to just depend on jar to have all classes -->
        <dependency>
            <groupId>${parent.groupId}</groupId>
            <artifactId>${parent.artifactId}-ejb</artifactId>
            <version>${project.version}</version>
            <type>ejb-client</type>
        </dependency>

        <!-- Import the EJB 3.1 API, we use runtime scope because we aren't 
            using any direct reference to EJB spec API in our client code -->
<!--
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <scope>compile</scope>
        </dependency>
-->
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
                annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.source}</target>
                </configuration>
            </plugin>
            <!-- Add the maven exec plugin to allow us to run a java program 
                via maven -->

                <plugin>
                    <groupId>org.jboss.as.plugins</groupId>
                    <artifactId>jboss-as-maven-plugin</artifactId>
                    <version>${version.org.jboss.as.plugins.maven.plugin}</version>
                    <inherited>true</inherited>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${version.exec.plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <!-- <workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory> -->
                    <arguments>
                        <!-- automatically creates the classpath using all project dependencies, also adding the project build directory -->
                        <argument>-classpath</argument>
                        <classpath>
                        </classpath>
                        <argument>-Djava.security.policy=${basedir}/src/test/resources/java.policy</argument>
                        <argument>org.jboss.as.quickstarts.helloworld.iiop.client.JDKClient</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

